{
  "id": "BlackDeath1",
  "label": "Black Death Model",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": 13882323,
    "roundsCanLoop": false,
    "showWebCam": false,
    "scaleX": 1,
    "scaleY": 1,
    "translateX": 0,
    "translateY": 0,
    "rotate": 0,
    "mirrorX": false,
    "mirrorY": false
  },
  "rounds": [
    {
      "id": "r1",
      "label": "Before Times",
      "time": 10,
      "intro": "Before Times Intro",
      "outtro": "",
      "initScript": `dbgOut 'roundDef: Round1'`,
      "endScript": `dbgOut 'END Round!'`
    },
    {
      "id": "r2",
      "label": "Plague Strikes",
      "time": 20,
      "intro": "Thee Plague Strikes Town",
      "outtro": "",
      "initScript": `dbgOut 'roundDef: Round2'`,
      "endScript": `dbgOut 'END Round!'`
    }
  ],
  "blueprints": [
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false

// COMMENT KEY
// 🔎 WHAT DOES THIS DO? heading
// 🔎 body
// ✏️ LETS CHANGE THIS: heading
// ✏️ body

# PROGRAM INIT

prop global.visible setTo false

// bd props
// add food

# PROGRAM UPDATE`
    },
    {
      "name": "Person",
      "scriptText": `# BLUEPRINT Person
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
// add features
addFeature Costume
addFeature Graphing
addFeature Physics
addFeature Touches
addFeature Population

// setup the costume
featProp Person.Costume.costumeName setTo 'PP_person_neutral.png'
featProp Person.Costume.scale setTo 0.7

// make sure we track interactions with other people
featCall Person.Touches monitor 'Person' b2b
featCall Person.Touches monitor 'Space' b2b
featCall Person.Touches monitor 'Food' b2b

// 🔎 WHAT are the properties of people?
// Do they currently have the plague?
addProp hasPlague boolean false

// How wealthy are they?  This will impact access to food.
addProp wealth number 5
prop Person.wealth setMin 0
prop Person.wealth setMax 10

// How healthy are they generally in terms of nutrition?
// for simplicity of modeling, start at 5 (middle of the road) and go up for eating good food
addProp nutritionLevel number 5
prop Person.nutritionLevel setMin 0
prop Person.nutritionLevel setMax 10

# PROGRAM UPDATE

when Person firstTouches Person [[
  // glow to show we are interacting
  featProp Person.Costume.glow setTo 1

]]

when Person firstTouches Space [[
  featProp Person.Costume.glow setTo 1

  ifExpr {{Space.getProp('wealth').value > Person.getProp('wealth').value}} [[
      featCall Person.Population createCharacter PopupEffect [[
        prop agent.textToUse setTo 'You are not welcome!'
      ]]
  ]]
]]

when Person firstTouches Food [[
  featProp Person.Costume.glow setTo 1

]]
`
    },
    {
      "name": "Space",
      "scriptText": `# BLUEPRINT Space
# TAG isCharControllable true
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics

// Setup costume
featProp Space.Costume.costumeName setTo 'GEN_square.json'
prop Space.zIndex setTo -200

// 🔎 WHAT are the properties of spaces? 
// 🔎 Note that many people perceive these as being ranked, rather than 
// 🔎 simply different, and therefore that is how they are represented in the scriptaddProp perceivedColor Number 0

// How wealthy is the space?  This will impact who is welcome.
addProp wealth number 6
prop Space.wealth setMin 0
prop Space.wealth setMax 10

# PROGRAM UPDATE


`
    },
    {
      "name": "PopupEffect",
      "scriptText": `# BLUEPRINT PopupEffect
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT

addFeature Costume
addFeature Physics
addFeature Graphing
addFeature Population

featProp PopupEffect.Costume.costumeName setTo 'GEN_onexone.json'
featProp PopupEffect.Graphing.text setTo ''
prop PopupEffect.zIndex setTo 500

addProp costumeToUse string ''
addProp textToUse string 'TEST'
addProp countDown Number 2

# PROGRAM UPDATE

every 0.1 runAtStart [[
  ifProp PopupEffect.costumeToUse notEqual '' [[
    propPush PopupEffect.costumeToUse
    featPropPop PopupEffect.Costume.costumeName
    prop PopupEffect.costumeToUse setTo ''
  ]]

  ifProp PopupEffect.textToUse notEqual '' [[
    propPush PopupEffect.textToUse
    featPropPop PopupEffect.Graphing.text
    prop PopupEffect.textToUse setTo ''
  ]]
]]
every 1 runAtStart [[

  prop PopupEffect.countDown sub 1
  ifExpr {{ agent.getProp('countDown').value == 0 }} [[
    featCall PopupEffect.Population removeCharacter
  ]]
]]`
    },
    {
      "name": "Food",
      "scriptText": `# BLUEPRINT Food
# TAG isCharControllable true
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM INIT

// Add features we need for this character
addFeature Costume
addFeature Physics

// Setup the costume
featProp Food.Costume.costumeName setTo 'DC_tomato.png'
featProp Food.Costume.scale setTo 0.2

// how nutritional is the food
addProp nutritionLevel number 5
prop Food.nutritionLevel setMin 0
prop Food.nutritionLevel setMax 10

# PROGRAM UPDATE`
    }
  ],
  "instances": [
    {
      "id": "0",
      "label": "Person 1",
      "bpid": "Person",
      "initScript": `prop x setTo -242.33
prop y setTo -24.97`
    },
    {
      "id": "1",
      "label": "Person 2",
      "bpid": "Person",
      "initScript": `prop x setTo 187.66
prop y setTo 48.13`
    },
    {
      "id": "2",
      "label": "Space 1",
      "bpid": "Space",
      "initScript": `prop x setTo -271.37
prop y setTo -272.55

`
    },
    {
      "id": "3",
      "label": "Space 2",
      "bpid": "Space",
      "initScript": `prop x setTo 268.93
prop y setTo -273.32`
    },
    {
      "id": "4",
      "label": "Space 3",
      "bpid": "Space",
      "initScript": `prop x setTo -269.55
prop y setTo 256.66`
    },
    {
      "id": "5",
      "label": "Food5",
      "bpid": "Food",
      "initScript": `prop x setTo -342.15
prop y setTo -338.28`
    }
  ]
}
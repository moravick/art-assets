{
  "id": "wetlands_beavers_energy",
  "label": "Wetlands: Beavers Building",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": "0x8A9A5B",
    "roundsCanLoop": true,
    "showWebCam": false,
    "scaleX": 1,
    "scaleY": 1,
    "translateX": 0,
    "translateY": 0,
    "rotate": 0,
    "mirrorX": false,
    "mirrorY": false
  },
  "rounds": [
    {
      "initScript": ``,
      "endScript": `
     
      // prep the message, but display later in case we want to add to it
      featProp global.Graphing.messageStringToShow setTo 'Nice work! How do you think that went? '

      // change other things and / or add to the message here 

      // display message
      featCall global.Graphing showMessageProp

      // log that we are done
      featCall global.IU logString 'Ending model run'
`
    }
  ],
  "blueprints": [
    {
      "name": "global",
      "scriptText": `# BLUEPRINT global
# TAG IsCharControllable false
# TAG IsPozyxControllable false
# TAG IsPtrackControllable false

// üîé WHAT DOES THIS MODEL DO?

// TODO:
// Cut some more stuff as needed
// Write a function to pre-set the build level in both models
// Add sun
// Add energy reps

# PROGRAM INIT

// add features
addFeature IU
addFeature Graphing
addFeature Population

// ‚úèÔ∏è LETS CHANGE THIS: consider adding / removing
// ‚úèÔ∏è The carbon capture graph
// ‚úèÔ∏è The pollution graph
// ‚úèÔ∏è The Beaver property for losesEnergy to make it easier to try ideas out


prop global.visible setTo false

// to help us keep track in the water
// the dam needs to update this
addProp damBuildLevel number 9

// change this to true once the water is a certain size
addProp canBuildLodge boolean true

// count of currently alive water plants
// the plants themselves update the count in the touches script
addProp waterPlantCount number 0
// track the fish too, just in case
addProp fishCount number 0

// to make it easier to place then hide the plants and fish
addProp showWaterPlantsToPlace boolean true
addProp showFishToPlace boolean true

// variables for helping the environment
addProp carbonCaptureRate number 10
addProp pollutionInWater number 60

addProp initialCarbonCaptureRate number 10
addProp initialPollutionInWater number 60

addProp tempNum number 0

// to be used by the noticing wizard
addProp noticingString string '...'

// required directive
# PROGRAM UPDATE

every 1 [[

  // update the captured carbon rate and pollution levels
  // multiply the waterPlantCount by a number to scale its impact
  // currently this is 1
  // then add that to the total captured
  propPush global.waterPlantCount
  prop global.tempNum setTo 5
  propPush global.tempNum
  stackMul
  propPush global.initialCarbonCaptureRate
  stackAdd
  propPop global.carbonCaptureRate

  // now do the same for pollution, but subtract instead of add
  propPush global.waterPlantCount
  prop global.tempNum setTo 5
  propPush global.tempNum
  stackMul
  propPush global.initialPollutionInWater
  stackSub
  propPop global.pollutionInWater

]]

every 0.5 [[
  // Check to see if the lodge can be built based on dam size
  // also log the shift once it can
  ifProp global.damBuildLevel greaterThan 5 [[
    // so we know it is about to flip
    ifProp global.canBuildLodge equal false [[
      featProp global.IU.logStringText setTo 'The water is deep and slow enough to build the lodge now'
      featCall global.IU logProperty
      prop global.canBuildLodge setTo true
      prop global.noticingString setTo 'Look how slow and deep the water above the dam is'
    ]]
  ]]
  ifProp global.damBuildLevel lessThan 5 [[
    prop global.canBuildLodge setTo false
  ]]
]]

onEvent START [[
  featCall global.IU logString 'Starting model run'
]]`
    },
    {
      "name": "Beaver",
      "scriptText": `# BLUEPRINT Beaver
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body

# PROGRAM INIT
// setup features
addFeature Physics
addFeature Touches
addFeature Costume
addFeature IU
addFeature Graphing
addFeature Movement

// set initial costume and resize
featProp Beaver.Costume.costumeName setTo 'WL_beaver.png'
featProp Beaver.Costume.scale setTo 0.15

// For logging more elaborate ideas
addProp tempString string ''


addProp energyLevel number 100
prop Beaver.energyLevel setMin 0
prop Beaver.energyLevel setMax 100

addProp displayText string ''
propPush Beaver.trackerId
propPop Beaver.displayText
featProp Beaver.Graphing.textProp setTo 'displayText'
featProp Beaver.Graphing.meterProp setTo 'energyLevel'
featProp Beaver.Graphing.meterColor setTo 65280

// ‚úèÔ∏è LETS CHANGE THIS: Does the beaver lose energy?
// ‚úèÔ∏è This helps us explore the model without worrying about food
addProp beaverLosesEnergy boolean true

# PROGRAM UPDATE


every 1 [[

  ifProp Beaver.beaverLosesEnergy equal true [[
    // lower energyLevel because living takes energy
    prop Beaver.energyLevel sub 2
  ]]

  // check if the beaver is ok
  // but only if it hasn't already been killed by a predator
  ifProp Beaver.isInert equal false [[
    ifProp Beaver.energyLevel equal 0 [[
      featCall Beaver.IU logString 'Beaver died from starvation'
      prop Beaver.alpha setTo 0.5
      prop Beaver.isInert setTo true
      prop Beaver.energyLevel setTo 0
    ]]
  ]]

]]`
    },
    {
      "name": "Twig",
      "scriptText": `# BLUEPRINT Twig
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT

// setup all of the features we need
addFeature Costume
addFeature Physics
addFeature Touches
addFeature Population

// set the costume
featProp Twig.Costume.costumeName setTo 'WL_twig.png'
featProp Twig.Costume.scale setTo 0.2

# PROGRAM UPDATE
`
    },
    {
      "name": "Rock",
      "scriptText": `# BLUEPRINT Rock
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT

// setup all of the features we need
addFeature Costume
addFeature Physics
addFeature Touches
addFeature Population

// set the costume
featProp Rock.Costume.costumeName setTo 'WL_rock.png'
featProp Rock.Costume.scale setTo 0.2

# PROGRAM UPDATE
`
    },
    {
      "name": "Mud",
      "scriptText": `# BLUEPRINT Mud
# TAG isPozyxControllable false
# TAG isCharControllable false
# TAG isPTrackControllable false

# PROGRAM INIT

// setup all of the features we need
addFeature Costume
addFeature Physics
addFeature Touches
addFeature Population

// set the costume
featProp Mud.Costume.costumeName setTo 'WL_mud.png'
featProp Mud.Costume.scale setTo 0.1

# PROGRAM UPDATE`
    },
    {
      "name": "Lodge",
      "scriptText": `# BLUEPRINT Lodge
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics

featProp Lodge.Costume.costumeName setTo 'GEN_square.json'
featProp Lodge.Costume.width setTo 100
featProp Lodge.Costume.height setTo 40
featCall Lodge.Costume setColorizeHSV 0.1 0.2 0.8

addProp buildLevel number 1
prop Lodge.buildLevel setMin 1
prop Lodge.buildLevel setMax 10

// to be used in re-scaling the width
addProp tempWidth number 0
prop Lodge.alpha setTo 0.2

# PROGRAM UPDATE

every 0.5 [[
  // re-scale based on the buildLevel
  propPush Lodge.buildLevel
  propPop Lodge.tempWidth
  prop Lodge.tempWidth mul 20
  prop Lodge.tempWidth add 80
  propPush Lodge.tempWidth
  featPropPop Lodge.Costume.width

  ifProp global.canBuildLodge equal true [[
    // make it clear we can now build
    featCall Lodge.Costume setColorizeHSV 0.1 0.4 0.8
    prop Lodge.alpha setTo 1
  ]]
]]`
    },
    {
      "name": "Dam",
      "scriptText": `# BLUEPRINT Dam
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics

featProp Dam.Costume.costumeName setTo 'GEN_square.json'
featProp Dam.Costume.width setTo 100
featProp Dam.Costume.height setTo 40
featCall Dam.Costume setColorizeHSV 0.1 0.4 0.8

addProp buildLevel number 1
prop Dam.buildLevel setMin 1
prop Dam.buildLevel setMax 10

// to be used in re-scaling the width
addProp tempWidth number 0

# PROGRAM UPDATE

every 0.5 [[
  // re-scale based on the buildLevel
  propPush Dam.buildLevel
  propPop Dam.tempWidth
  prop Dam.tempWidth mul 20
  prop Dam.tempWidth add 80
  propPush Dam.tempWidth
  featPropPop Dam.Costume.width
]]`
    },
    {
      "name": "Water",
      "scriptText": `# BLUEPRINT Water
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics

featProp Water.Costume.costumeName setTo 'GEN_square.json'
featProp Water.Costume.width setTo 200
featProp Water.Costume.height setTo 400
featCall Water.Costume setColorize 51 170 255
prop Water.zIndex setTo -200

addProp buildLevel number 1
prop Water.buildLevel setMin 1
prop Water.buildLevel setMax 10

// used in calculating the width to match build level
addProp tempWidth number 0

// can be above or below the dam
// we only do certain things if it is above
addProp location string 'belowDam'

// this can be fast, medium, or slow
addProp speedOfWater string 'fast'

# PROGRAM UPDATE

every 0.5 [[
  //  the water above the dam grows as the dam makes it pool
  ifProp Water.location equal 'aboveDam' [[
    propPush global.damBuildLevel
    propPop Water.buildLevel
    propPush Water.buildLevel
    propPop Water.tempWidth
    prop Water.tempWidth mul 30
    prop Water.tempWidth add 170
    propPush Water.tempWidth
    featPropPop Water.Costume.width

      // change the water speed based on the size of this water, assuming
      // it moves faster when it is narrower, and slows down as it pools
      ifProp Water.buildLevel lessThanOrEqual 3 [[
        prop Water.speedOfWater setTo 'fast'
        featCall Water.Costume setColorize 51 170 255
      ]]
      ifProp Water.buildLevel greaterThan 3 [[
        prop Water.speedOfWater setTo 'medium'
        featCall Water.Costume setColorize 0 118 198

      ]]
      ifProp Water.buildLevel greaterThanOrEqual 5 [[
        prop Water.speedOfWater setTo 'slow'
        featCall Water.Costume setColorize 0 71 143
      ]]

  ]]

  // the dam causes the water below it to shrink
  ifProp Water.location notEqual 'aboveDam' [[
    propPush global.damBuildLevel
    propPop Water.buildLevel
    propPush Water.buildLevel
    propPop Water.tempWidth
    prop Water.tempWidth mul -10
    prop Water.tempWidth add 210
    propPush Water.tempWidth
    featPropPop Water.Costume.width

      // change the water speed based on the size of this water, assuming
      // it moves faster when it is narrower, and slows down as it pools
      ifProp Water.buildLevel lessThanOrEqual 3 [[
        prop Water.speedOfWater setTo 'slow'
        featCall Water.Costume setColorize 51 170 255
      ]]
      ifProp Water.buildLevel greaterThan 3 [[
        prop Water.speedOfWater setTo 'medium'
        featCall Water.Costume setColorize 93 197 255
      ]]
      ifProp Water.buildLevel greaterThanOrEqual 5 [[
        prop Water.speedOfWater setTo 'fast'
        featCall Water.Costume setColorize 128 225 255
      ]]

  ]]

]]`
    },
    {
      "name": "StreamBed",
      "scriptText": `# BLUEPRINT StreamBed
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics

featProp StreamBed.Costume.costumeName setTo 'GEN_square.json'
featProp StreamBed.Costume.width setTo 200
featProp StreamBed.Costume.height setTo 400
featCall StreamBed.Costume setColorizeHSV 0.1 0.9 0.7
prop StreamBed.zIndex setTo -300

# PROGRAM UPDATE`
    },
    {
      "name": "Predator",
      "scriptText": `# BLUEPRINT Predator
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches
addFeature Movement

featProp Predator.Costume.costumeName setTo 'WL_coyote.png'
featProp Predator.Costume.scale setTo 0.2

featCall Predator.Touches monitor 'Beaver' b2b

# PROGRAM UPDATE

// Flip the artwork to point left or right depending on the direction the character is moving
ifFeatProp Predator.Movement.compassDirection equal 'E' [[
  featProp Predator.Costume.flipX setTo false
]]
ifFeatProp Predator.Movement.compassDirection equal 'W' [[
  featProp Predator.Costume.flipX setTo true
]]

when Predator firsttouches Beaver [[
  ifProp Beaver.protected equal false [[
    // the beaver is killed by the predator
    featCall Beaver.IU logString 'Beaver was killed by a predator because it was not protected'
    prop Beaver.alpha setTo 0.5
    prop Beaver.isInert setTo true
    prop Beaver.energyLevel setTo 0
  ]]
  ifProp Beaver.protected equal true [[
    featCall Beaver.IU logString 'The predator tried to attack the beaver but it was protected!'
  ]]

]]
`
    },
    {
      "name": "WaterPlant",
      "scriptText": `# BLUEPRINT WaterPlant
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches
addFeature IU

featProp WaterPlant.Costume.costumeName setTo 'WL_plant.png'
featProp WaterPlant.Costume.scale setTo 0.15

featCall WaterPlant.Touches monitor 'Water' c2b

addProp alive boolean false
prop WaterPlant.visible setTo false
propPush global.showWaterPlantsToPlace
propPop WaterPlant.visible

# PROGRAM UPDATE

// if the plant is suddenly under water, and the water is slow enough
// let's have it appear / grow
when WaterPlant centertouches Water [[
  // if the water is slow enough, become alive
  ifProp WaterPlant.alive equal false [[
    ifProp Water.speedOfWater notEqual 'fast' [[
      prop global.waterPlantCount add 1
      featCall WaterPlant.IU logString 'A new water plant grows because of enough deep, slow water'
      prop WaterPlant.alive setTo true
      prop WaterPlant.visible setTo true
      prop global.noticingString setTo 'Check out the new plants!'
    ]]
  ]]

  // if the water is suddenly too fast, dissapear
  ifProp WaterPlant.alive equal true [[
    ifProp Water.speedOfWater equal 'fast' [[
      prop global.waterPlantCount sub 1
      featCall WaterPlant.IU logString 'A water plant dies off because the water is too fast'
      prop WaterPlant.alive setTo false
      prop WaterPlant.visible setTo false
    ]]
  ]]
]]

  // if the water recedes, remove the plant
  when WaterPlant centerlasttouches Water [[
    ifProp WaterPlant.alive equal true [[
        prop WaterPlant.alive setTo false
        prop global.waterPlantCount sub 1
        featCall WaterPlant.IU logString 'A water plant dies off because the water receded'
        prop WaterPlant.visible setTo false
    ]]
]]`
    },
    {
      "name": "Fish",
      "scriptText": `# BLUEPRINT Fish
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches
addFeature IU

featProp Fish.Costume.costumeName setTo 'AQ_fish.png'
featProp Fish.Costume.scale setTo 0.15

featCall Fish.Touches monitor 'Water' c2b

addProp alive boolean true
prop Fish.visible setTo true
propPush global.showFishToPlace
propPop Fish.visible

# PROGRAM UPDATE

// if the plant is suddenly under water, and the water is slow enough
// let's have it appear / grow
when Fish centertouches Water [[
  // if the water is slow enough, become alive
  ifProp Fish.alive equal false [[
    ifProp Water.speedOfWater equal 'slow' [[
      prop global.fishCount add 1
      prop Fish.alive setTo true
      prop Fish.visible setTo true
      featCall Fish.IU logString 'A new fish is in the pond because of the slow water'
      prop global.noticingString setTo 'Check out the new fish!'
    ]]
  ]]

  // if the water is suddenly too fast, dissapear
  ifProp Fish.alive equal true [[
    ifProp Water.speedOfWater notEqual 'slow' [[
      prop global.fishCount sub 1
      prop Fish.alive setTo false
      prop Fish.visible setTo false
      featCall Fish.IU logString 'A fish moves away because the water is too fast'
    ]]
  ]]
]]

// if the water recedes, remove the plant
when Fish centerlasttouches Water [[
  ifProp Fish.alive equal true [[
    prop Fish.alive setTo false
    prop global.fishCount sub 1
    featCall Fish.IU logString 'A fish dies off because the water receded'
    prop Fish.visible setTo false
  ]]
]]`
    },
    {
      "name": "Tree",
      "scriptText": `# BLUEPRINT Tree
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches

featProp Tree.Costume.costumeName setTo 'WL_tree.png'
featProp Tree.Costume.scale setTo 0.25

# PROGRAM UPDATE`
    },
    {
      "name": "GreatSpotForDam",
      "scriptText": `# BLUEPRINT GreatSpotForDam
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp GreatSpotForDam.Costume.costumeName setTo 'WL_dam_bg.png'
featProp GreatSpotForDam.Costume.scale setTo 0.5


# PROGRAM UPDATE`
    },
    {
      "name": "WaterSpeed",
      "scriptText": `# BLUEPRINT WaterSpeed
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
featProp WaterSpeed.Costume.costumeName setTo 'WL_water_speed_medium.png'
featProp WaterSpeed.Costume.scale setTo 0.5
prop WaterSpeed.zIndex setTo 100

// can be above or below the dam
// we only do certain things if it is above
addProp location string 'belowDam'
addProp buildLevel number 1

# PROGRAM UPDATE

propPush global.damBuildLevel
propPop WaterSpeed.buildLevel

    // change the water speed based on the size of this water, assuming
    // it moves faster when it is narrower, and slows down as it pools

ifProp WaterSpeed.location equal 'aboveDam' [[
    ifProp WaterSpeed.buildLevel lessThanOrEqual 3 [[
        // medium
        featProp WaterSpeed.Costume.costumeName setTo 'WL_water_speed_medium.png'
        prop WaterSpeed.alpha setTo 1
    ]]
    ifProp WaterSpeed.buildLevel greaterThan 3 [[
        // slow
        prop WaterSpeed.alpha setTo 0
    ]]
    ifProp WaterSpeed.buildLevel greaterThanOrEqual 5 [[
        // slow and deep
        //featProp WaterSpeed.Costume.costumeName setTo 'WL_water_speed_fast.png'
        prop WaterSpeed.alpha setTo 0
    ]]

]]

ifProp WaterSpeed.location equal 'belowDam' [[
  ifProp WaterSpeed.buildLevel lessThanOrEqual 3 [[
      // medium
      featProp WaterSpeed.Costume.costumeName setTo 'WL_water_speed_medium.png'
      prop WaterSpeed.alpha setTo 1
  ]]
  ifProp WaterSpeed.buildLevel greaterThan 3 [[
      // fast
      featProp WaterSpeed.Costume.costumeName setTo 'WL_water_speed_fast.png'
      prop WaterSpeed.alpha setTo 1
  ]]
  ifProp WaterSpeed.buildLevel greaterThanOrEqual 5 [[
      // medium and shallow
      featProp WaterSpeed.Costume.costumeName setTo 'WL_water_speed_medium.png'
  ]]

]]

`
    },
    {
      "name": "Noticing",
      "scriptText": `# BLUEPRINT Noticing
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Graphing
featProp Noticing.Costume.costumeName setTo 'GEN_onexone.json'
featProp Noticing.Graphing.text setTo 'Things to notice will appear here'

# PROGRAM UPDATE

every 1 [[
  
  propPush global.noticingString
  featPropPop Noticing.Graphing.text

]]

  `
    },
    {
      "name": "Sun",
      "scriptText": `# BLUEPRINT Sun
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

// COMMENT KEY
// üîé WHAT DOES THIS DO? heading
// üîé body
// ‚úèÔ∏è LETS CHANGE THIS: heading
// ‚úèÔ∏è body

# PROGRAM INIT
addFeature Costume
featProp Sun.Costume.costumeName setTo 'GEN_sun-corner.png'
// featCall Sun.Costume setColorize 255 215 0
prop Sun.zIndex setTo 0

addFeature Physics

featProp Sun.Costume.scale setTo 1.3

// types to use for energy transfer: source, producer, consumer, decomposer, waste, soil (we might add more later or improve the last few labels)
addProp energyType string 'source'


// required directive
# PROGRAM UPDATE`
    },
    {
      "name": "EnergyRepresentation",
      "scriptText": `# BLUEPRINT EnergyRepresentation
# TAG isCharControllable true
# TAG isPozyxControllable true
# TAG isPTrackControllable false

# PROGRAM INIT
addFeature Costume
addFeature Physics
addFeature Touches

// Start off looking like a magnifying lense so we know that you need to go look at the other characters.
// Later this will change to different types of energy as the students move over the other characters.
featProp EnergyRepresentation.Costume.costumeName setTo 'AQ_energy_empty.png'
featProp EnergyRepresentation.Costume.scale setTo 0.5
prop EnergyRepresentation.alpha setTo 0.8
prop EnergyRepresentation.zIndex setTo 200

// Setup energy properties
addProp energyLevel number 0
prop EnergyRepresentation.energyLevel setMax 100
prop EnergyRepresentation.energyLevel setMin 0

// Setup energy type so that we know what we can give it to
// start with none beause we have not picked up energy yet.
addProp energyType string 'none'

// Setup the touch moniitoring so that we check when the
// EnergyRepresentation characters touch the Sun, Beaver, Tree, or Predator
// The scripts for when they do touch are within Update (e.g., when EnergyRepresentation touches Sun etc.)
featCall EnergyRepresentation.Touches monitor 'Sun' b2b
featCall EnergyRepresentation.Touches monitor 'Tree' b2b
featCall EnergyRepresentation.Touches monitor 'Beaver' b2b
featCall EnergyRepresentation.Touches monitor 'Predator' b2b

# PROGRAM UPDATE`
    }
  ],
  "instances": [
    {
      "id": "0",
      "label": "Twig 1",
      "bpid": "Twig",
      "initScript": `prop x setTo -331.63
prop y setTo -164.14`
    },
    {
      "id": "1",
      "label": "Lodge",
      "bpid": "Lodge",
      "initScript": `prop x setTo 0
prop y setTo -225`
    },
    {
      "id": "2",
      "label": "Dam",
      "bpid": "Dam",
      "initScript": `prop x setTo 0
prop y setTo 0
prop Dam.buildLevel setTo 1
`
    },
    {
      "id": "3",
      "label": "Water Above Dam",
      "bpid": "Water",
      "initScript": `prop x setTo 0
prop y setTo -200
prop location setTo 'aboveDam'
prop Water.speedOfWater setTo 'slow'
featCall Water.Costume setColorize 0 71 143
featProp Water.Costume.width setTo 470
`
    },
    {
      "id": "4",
      "label": "Water Below Dam",
      "bpid": "Water",
      "initScript": `prop x setTo 0
prop y setTo 199
prop location setTo 'belowDam'
prop Water.speedOfWater setTo 'slow'
featCall Water.Costume setColorize 128 225 255
featProp Water.Costume.width setTo 110

`
    },
    {
      "id": "5",
      "label": "Twig 2",
      "bpid": "Twig",
      "initScript": `prop x setTo -317.10
prop y setTo -134.30`
    },
    {
      "id": "6",
      "label": "Twig 3",
      "bpid": "Twig",
      "initScript": `prop x setTo -336.43
prop y setTo -73.87`
    },
    {
      "id": "7",
      "label": "Twig 4",
      "bpid": "Twig",
      "initScript": `prop x setTo -316.76
prop y setTo -106.20`
    },
    {
      "id": "8",
      "label": "Twig 5",
      "bpid": "Twig",
      "initScript": `prop x setTo 293.36
prop y setTo -167.77`
    },
    {
      "id": "9",
      "label": "Twig 6",
      "bpid": "Twig",
      "initScript": `prop x setTo 311.16
prop y setTo -203.12`
    },
    {
      "id": "10",
      "label": "Twig 7",
      "bpid": "Twig",
      "initScript": `prop x setTo 233.44
prop y setTo 314.78`
    },
    {
      "id": "11",
      "label": "Mud 1",
      "bpid": "Mud",
      "initScript": `prop x setTo 282.14
prop y setTo 21.75`
    },
    {
      "id": "12",
      "label": "Rock 1",
      "bpid": "Rock",
      "initScript": `prop x setTo 319.34
prop y setTo -113.62`
    },
    {
      "id": "13",
      "label": "Rock 2",
      "bpid": "Rock",
      "initScript": `prop x setTo -303.54
prop y setTo 165.14`
    },
    {
      "id": "14",
      "label": "Mud 3",
      "bpid": "Mud",
      "initScript": `prop x setTo 309.95
prop y setTo 66.96`
    },
    {
      "id": "15",
      "label": "Mud 2",
      "bpid": "Mud",
      "initScript": `prop x setTo 277.77
prop y setTo 47.90`
    },
    {
      "id": "16",
      "label": "Rock 3",
      "bpid": "Rock",
      "initScript": `prop x setTo -361.11
prop y setTo 180.27`
    },
    {
      "id": "17",
      "label": "WaterPlant",
      "bpid": "WaterPlant",
      "initScript": `prop x setTo 68.07
prop y setTo -301.81

`
    },
    {
      "id": "18",
      "label": "Tree18",
      "bpid": "Tree",
      "initScript": `prop x setTo 136.30
prop y setTo 215.07`
    },
    {
      "id": "19",
      "label": "Tree19",
      "bpid": "Tree",
      "initScript": `prop x setTo -241.61
prop y setTo 31.91`
    },
    {
      "id": "20",
      "label": "Tree20",
      "bpid": "Tree",
      "initScript": `prop x setTo 319.10
prop y setTo -324.79`
    },
    {
      "id": "22",
      "label": "WaterPlant 2",
      "bpid": "WaterPlant",
      "initScript": `prop x setTo -52.01
prop y setTo -372.58
`
    },
    {
      "id": "23",
      "label": "WaterPlant 3",
      "bpid": "WaterPlant",
      "initScript": `prop x setTo 181.57
prop y setTo -249.59
`
    },
    {
      "id": "24",
      "label": "WaterPlant 4",
      "bpid": "WaterPlant",
      "initScript": `prop x setTo -209.94
prop y setTo -274.44
`
    },
    {
      "id": "25",
      "label": "WaterPlant 5",
      "bpid": "WaterPlant",
      "initScript": `prop x setTo -93.72
prop y setTo -44.98
`
    },
    {
      "id": "26",
      "label": "WaterPlant 6",
      "bpid": "WaterPlant",
      "initScript": `prop x setTo 191.07
prop y setTo -93.94
`
    },
    {
      "id": "27",
      "label": "StreamBed",
      "bpid": "StreamBed",
      "initScript": `prop x setTo 0
prop y setTo 199`
    },
    {
      "id": "31",
      "label": "Fish",
      "bpid": "Fish",
      "initScript": `prop x setTo -10.14
prop y setTo -68.97`
    },
    {
      "id": "32",
      "label": "Fish",
      "bpid": "Fish",
      "initScript": `prop x setTo -113.14
prop y setTo -254.56`
    },
    {
      "id": "34",
      "label": "GreatSpotForDam34",
      "bpid": "GreatSpotForDam",
      "initScript": `prop x setTo 1.21
prop y setTo 2.01
prop zIndex setTo 50`
    },
    {
      "id": "35",
      "label": "Mud 4",
      "bpid": "Mud",
      "initScript": `prop x setTo -311.83
prop y setTo 208.01`
    },
    {
      "id": "36",
      "label": "Rock 4",
      "bpid": "Rock",
      "initScript": `prop x setTo -341.73
prop y setTo 324.96`
    },
    {
      "id": "37",
      "label": "Mud 5",
      "bpid": "Mud",
      "initScript": `prop x setTo 336.39
prop y setTo 42.35`
    },
    {
      "id": "38",
      "label": "Twig 8",
      "bpid": "Twig",
      "initScript": `prop x setTo 325.18
prop y setTo -184.35`
    },
    {
      "id": "39",
      "label": "Rock 5",
      "bpid": "Rock",
      "initScript": `prop x setTo 348.90
prop y setTo -106.61`
    },
    {
      "id": "40",
      "label": "Rock 6",
      "bpid": "Rock",
      "initScript": `prop x setTo -341.33
prop y setTo 154.86`
    },
    {
      "id": "41",
      "label": "Mud ",
      "bpid": "Mud",
      "initScript": `prop x setTo -332.42
prop y setTo 222.62`
    },
    {
      "id": "42",
      "label": "Twig 9",
      "bpid": "Twig",
      "initScript": `prop x setTo -349.77
prop y setTo -127.91`
    },
    {
      "id": "43",
      "label": "Twig 10",
      "bpid": "Twig",
      "initScript": `prop x setTo -341.43
prop y setTo -94.20`
    },
    {
      "id": "44",
      "label": "WaterSpeedBottom",
      "bpid": "WaterSpeed",
      "initScript": `prop x setTo 2.90
prop y setTo 196.10
prop location setTo 'belowDam'`
    },
    {
      "id": "45",
      "label": "WaterSpeedTop",
      "bpid": "WaterSpeed",
      "initScript": `prop x setTo -1.18
prop y setTo -163.69
prop location setTo 'aboveDam'
prop visible setTo false
`
    },
    {
      "id": "46",
      "label": "Noticing46",
      "bpid": "Noticing",
      "initScript": `prop x setTo -469.41
prop y setTo 112.08`
    },
    {
      "id": "47",
      "label": "Beaver 1",
      "bpid": "Beaver",
      "initScript": `prop x setTo -165.45
prop y setTo -161.75`
    },
    {
      "id": "48",
      "label": "Sun48",
      "bpid": "Sun",
      "initScript": `prop x setTo -261.05
prop y setTo -361.04`
    }
  ]
}
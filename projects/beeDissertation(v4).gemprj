{
  "id": "beeDissertation(v4)",
  "label": "Bee Dissertation",
  "metadata": {
    "top": -400,
    "right": 400,
    "bottom": 400,
    "left": -400,
    "wrap": [
      false,
      false
    ],
    "bounce": true,
    "bgcolor": 0,
    "roundsCanLoop": true
  },
  "rounds": [],
  "blueprints": [
    {
      "id": "Bee",
      "label": "Bee",
      "scriptText": `# BLUEPRINT Bee
# TAG isPozyxControllable true
# TAG isCharControllable true
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'bee.png' 

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.3
      
useFeature Movement
featCall Movement setMovementType 'edgeToEdge' 1 0 180
featProp Movement useAutoOrientation setTo true

useFeature Touches
featCall Touches monitor redFlower b2b
featCall Touches monitor blueFlower b2b
featCall Touches monitor yellowFlower b2b
featCall Touches monitor watermelonVeggie b2b
featCall Touches monitor squashVeggie b2b
featCall Touches monitor pumpVeggie b2b

featCall Touches monitor Hive b2b

addProp nectarAmount Number 0
prop nectarAmount setMax 100
prop nectarAmount setMin 0

addProp pollinateRed Boolean
prop pollinateRed setTo false
addProp pollinateYellow Boolean
prop pollinateYellow setTo false
addProp pollinateBlue Boolean
prop pollinateBlue setTo false
addProp pollinateSquash Boolean
prop pollinateSquash setTo false
addProp pollinateWater Boolean
prop pollinateWater setTo false
addProp pollinatePump Boolean
prop pollinatePump setTo false

addProp redID Number 0
prop redID setTo 0
addProp blueID Number 0
prop blueID setTo 0
addProp yellowID Number 0
prop yellowID setTo 0
addProp squashID Number 0
prop squashID setTo 0
addProp waterID Number 0
prop waterID setTo 0
addProp pumpID Number 0
prop pumpID setTo 0


useFeature AgentWidgets
featProp AgentWidgets text setTo 'Bee'
featCall AgentWidgets bindMeterTo nectarAmount

useFeature Population

# PROGRAM INIT 

# PROGRAM EVENT

# PROGRAM UPDATE
//HIVER INTERACTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
when Bee touches Hive [[
\tevery 1 runAtStart [[
\t\tifExpr {{ Bee.getProp('nectarAmount').value > 0}} [[
\t\t\tfeatCall Bee.Costume setGlow 2
\t\t\tprop Bee.nectarAmount sub 5
\t\t\tprop Hive.nectarAmount add 5 
\t\t]] 
\t]]
]]


//YELLOW FLOWER INTERACTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//nectar exchange
when Bee touches yellowFlower [[
\tevery 1 runAtStart [[
\t\tfeatCall Bee.Costume setGlow 2
        prop Bee.nectarAmount add 5
        prop yellowFlower.nectarAmount sub 5
\t]]
]]

//setting pollination-related properties for next flower
when Bee lastTouches yellowFlower [[
\tifExpr {{ Bee.getProp('pollinateYellow').value == false }} [[
\t\tprop yellowID setTo yellowFlower.getProp('flowerID').value //BUG not assigning correctly
\t\tprop pollinateYellow setTo true
\t]]
]]

//pollination when new flower of same color is visited
when Bee firstTouches yellowFlower [[
\tifExpr {{ Bee.getProp('pollinateYellow').value == true }} [[ //bee has visited color before
\t\tifExpr {{ Bee.getProp('yellowID').value != yellowFlower.getProp('flowerID').value }} [[ // BUG ~ values not comparing correctly
\t\t\tfeatCall Population createAgent yellowFlower [[
\t\t\t\tprop x addRndInt -50 50
\t\t\t\tprop y addRndInt -50 50
\t\t\t\tprop nectarAmount setTo 50
\t\t\t\tfeatProp Physics scale setTo 0.25 
\t\t\t]] 
\t\t]] 
\t]]
\t//ifExpr {{ Bee.getProp('yellowFlower').value == false }} [[ ]]
]]


//BLUE FLOWER INTERACTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//nectar exchange
when Bee touches blueFlower [[
\tevery 1 runAtStart [[
\t\tfeatCall Bee.Costume setGlow 2
        prop Bee.nectarAmount add 5
        prop blueFlower.nectarAmount sub 5
\t]]
]]

//setting pollination-related properties for next flower
when Bee lastTouches blueFlower [[
  ifExpr {{ Bee.getProp('pollinateBlue').value == false }} [[
    // prop blueID setTo blueFlower.getProp('flowerID').value
    prop pollinateBlue setTo true
  ]]

  // always set this ... that way you can always pollinate a different flower from this one and have to keep moving
  exprPush {{ blueFlower.getProp('flowerID').value }}
  propPop blueID

]]

//pollination when new flower of same color is visited
when Bee firstTouches blueFlower [[
  ifExpr {{ Bee.getProp('pollinateBlue').value == true }} [[ //bee has visited color before
    ifExpr {{ Bee.getProp('blueID').value != blueFlower.getProp('flowerID').value }} [[ // BUG ~ values not comparing correctly
      featCall Population createAgent blueFlower [[
      prop x addRndInt -50 50
      prop y addRndInt -50 50
      prop nectarAmount setTo 50
      featProp Physics scale setTo 0.25 
    ]] 
  ]] 
]]
//ifExpr {{ Bee.getProp('pollinateBlue').value == false }} [[ ]]
]]

//RED FLOWER INTERACTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//nectar exchange
when Bee touches redFlower [[
\tevery 1 runAtStart [[
\t\tfeatCall Bee.Costume setGlow 2
        prop Bee.nectarAmount add 5
        prop redFlower.nectarAmount sub 5
\t]]
]]

//setting pollination-related properties for next flower
when Bee lastTouches redFlower [[
\tifExpr {{ Bee.getProp('pollinateRed').value == false }} [[
\t\tprop redID setTo redFlower.getProp('flowerID').value //BUG not assigning correctly
\t\tprop pollinateRed setTo true
\t]]
]]

//pollination when new flower of same color is visited
when Bee firstTouches redFlower [[
\tifExpr {{ Bee.getProp('pollinateRed').value == true }} [[ //bee has visited color before
\t\tifExpr {{ Bee.getProp('redID').value != redFlower.getProp('flowerID').value }} [[ // BUG ~ values not comparing correctly
\t\t\tfeatCall Population createAgent redFlower [[
\t\t\t\tprop x addRndInt -50 50
\t\t\t\tprop y addRndInt -50 50
\t\t\t\tprop nectarAmount setTo 50
\t\t\t\tfeatProp Physics scale setTo 0.25 
\t\t\t]] 
\t\t]] 
\t]]
\t//ifExpr {{ Bee.getProp('pollinateRed').value == false }} [[ ]]
]]

//PUMPKIN VEGGIE INTERACTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//nectar exchange
when Bee touches pumpVeggie [[
\tevery 1 runAtStart [[
\t\tfeatCall Bee.Costume setGlow 2
        prop Bee.nectarAmount add 5
        prop pumpVeggie.nectarAmount sub 5
\t]]
]]

//setting pollination-related properties for next flower
when Bee lastTouches pumpVeggie [[
\tifExpr {{ Bee.getProp('pollinatePump').value == false }} [[
\t\tprop pumpID setTo pumpVeggie.getProp('veggieID').value //BUG not assigning correctly
\t\tprop pollinatePump setTo true
\t]]
]]

//pollination when new flower of same color is visited
when Bee firstTouches pumpVeggie [[
\tifExpr {{ Bee.getProp('pollinatePump').value == true }} [[ //bee has visited color before
\t\tifExpr {{ Bee.getProp('pumpID').value != pumpVeggie.getProp('veggieID').value }} [[ // BUG ~ values not comparing correctly
\t\t\tfeatCall Population createAgent pumpVeggie [[
\t\t\t\tprop x addRndInt -50 50
\t\t\t\tprop y addRndInt -50 50
\t\t\t\tprop nectarAmount setTo 50
\t\t\t\tfeatProp Physics scale setTo 0.25 
\t\t\t]] 
\t\t]] 
\t]]
\t//ifExpr {{ Bee.getProp('pollinateSquash').value == false }} [[ ]]
]]


//WATERMELON VEGGIE INTERACTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//nectar exchange
when Bee touches watermelonVeggie [[
\tevery 1 runAtStart [[
\t\tfeatCall Bee.Costume setGlow 2
        prop Bee.nectarAmount add 5
        prop watermelonVeggie.nectarAmount sub 5
\t]]
]]

//setting pollination-related properties for next flower
when Bee lastTouches watermelonVeggie [[
\tifExpr {{ Bee.getProp('pollinateWater').value == false }} [[
\t\tprop waterID setTo watermelonVeggie.getProp('veggieID').value //BUG not assigning correctly
\t\tprop pollinateWater setTo true
\t]]
]]

//pollination when new flower of same color is visited
when Bee firstTouches watermelonVeggie [[
\tifExpr {{ Bee.getProp('pollinateWater').value == true }} [[ //bee has visited color before
\t\tifExpr {{ Bee.getProp('waterID').value != watermelonVeggie.getProp('veggieID').value }} [[ // BUG ~ values not comparing correctly
\t\t\tfeatCall Population createAgent watermelonVeggie [[
\t\t\t\tprop x addRndInt -50 50
\t\t\t\tprop y addRndInt -50 50
\t\t\t\tprop nectarAmount setTo 50
\t\t\t\tfeatProp Physics scale setTo 0.25 
\t\t\t]] 
\t\t]] 
\t]]
\t//ifExpr {{ Bee.getProp('pollinateSquash').value == false }} [[ ]]
]]

//SQUASH VEGGIE INTERACTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//nectar exchange
when Bee touches squashVeggie [[
\tevery 1 runAtStart [[
\t\tfeatCall Bee.Costume setGlow 2
        prop Bee.nectarAmount add 5
        prop squashVeggie.nectarAmount sub 5
\t]]
]]

//setting pollination-related properties for next flower
when Bee lastTouches squashVeggie [[
\tifExpr {{ Bee.getProp('pollinateSquash').value == false }} [[
\t\tprop squashID setTo squashVeggie.getProp('veggieID').value //BUG not assigning correctly
\t\tprop pollinateSquash setTo true
\t]]
]]

//pollination when new flower of same color is visited
when Bee firstTouches squashVeggie [[
\tifExpr {{ Bee.getProp('pollinateSquash').value == true }} [[ //bee has visited color before
\t\tifExpr {{ Bee.getProp('squashID').value != squashVeggie.getProp('veggieID').value }} [[ // BUG ~ values not comparing correctly
\t\t\tfeatCall Population createAgent squashVeggie [[
\t\t\t\tprop x addRndInt -50 50
\t\t\t\tprop y addRndInt -50 50
\t\t\t\tprop nectarAmount setTo 50
\t\t\t\tfeatProp Physics scale setTo 0.25 
\t\t\t]] 
\t\t]] 
\t]]
\t//ifExpr {{ Bee.getProp('pollinateSquash').value == false }} [[ ]]
]]
`
    },
    {
      "id": "Hive",
      "label": "Hive",
      "scriptText": `# BLUEPRINT Hive
# TAG isCharControllable false
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'hive.png'

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.5

useFeature Touches
featCall Touches monitor Bee b2b

addProp nectarAmount Number 0
prop nectarAmount setMax 100
prop nectarAmount setMin 0

useFeature AgentWidgets
featProp AgentWidgets text setTo 'Hive'
featCall AgentWidgets bindMeterTo nectarAmount`
    },
    {
      "id": "redFlower",
      "label": "redFlower",
      "scriptText": `# BLUEPRINT redFlower
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'redFlower.png' 

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.5

useFeature Touches
featCall Touches monitor Bee b2b

addProp nectarAmount Number 100 
prop nectarAmount setMax 100
prop nectarAmount setMin 0 

addProp flowerID Number 0
prop flowerID setToRnd 100 999

useFeature AgentWidgets
featProp AgentWidgets text setTo 'Red Flower'
featCall AgentWidgets bindMeterTo nectarAmount

useFeature Population

# PROGRAM INIT
`
    },
    {
      "id": "blueFlower",
      "label": "blueFlower",
      "scriptText": `# BLUEPRINT blueFlower
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'blueFlower.png' 

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.5

useFeature Touches
featCall Touches monitor Bee b2b

addProp nectarAmount Number 100 
prop nectarAmount setMax 100
prop nectarAmount setMin 0 

useFeature Population

addProp flowerID Number 0

// set the id to the current count of agents so that it keeps incrementing
exprPush {{ agent.callFeatMethod('Population', 'getActiveAgentsCount', 'blueFlower') + 1 }}
propPop flowerID
dbgOut 'flowerID' {{agent.getProp('flowerID').value}}

useFeature AgentWidgets
featProp AgentWidgets text setTo 'Blue Flower'
featCall AgentWidgets bindMeterTo nectarAmount

# PROGRAM INIT


`
    },
    {
      "id": "yellowFlower",
      "label": "yellowFlower",
      "scriptText": `# BLUEPRINT yellowFlower
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'yellowFlower.png' 

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.5

useFeature Touches
featCall Touches monitor Bee b2b

addProp nectarAmount Number 100 
prop nectarAmount setMax 100
prop nectarAmount setMin 0 

addProp flowerID Number 0
prop flowerID setToRnd 100 999

useFeature AgentWidgets
featProp AgentWidgets text setTo 'Yellow Flower'
featCall AgentWidgets bindMeterTo nectarAmount

useFeature Population

# PROGRAM INIT
`
    },
    {
      "id": "squashVeggie",
      "label": "squashVeggie",
      "scriptText": `# BLUEPRINT squashVeggie
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'squashVeggie.png' 

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.5

useFeature Touches
featCall Touches monitor Bee b2b

addProp nectarAmount Number 100 
prop nectarAmount setMax 100
prop nectarAmount setMin 0 

addProp veggieID Number 0
prop veggieID setToRnd 100 999

useFeature AgentWidgets
featProp AgentWidgets text setTo 'Squash'
featCall AgentWidgets bindMeterTo nectarAmount

useFeature Population

# PROGRAM INIT
`
    },
    {
      "id": "pumpVeggie",
      "label": "pumpVeggie",
      "scriptText": `# BLUEPRINT pumpVeggie
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'pumpkinVeggie.png' 

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.5

useFeature Touches
featCall Touches monitor Bee b2b

addProp nectarAmount Number 100 
prop nectarAmount setMax 100
prop nectarAmount setMin 0 

addProp veggieID Number 0
prop veggieID setToRnd 100 999

useFeature AgentWidgets
featProp AgentWidgets text setTo 'Pumpkin'
featCall AgentWidgets bindMeterTo nectarAmount

useFeature Population

# PROGRAM INIT
`
    },
    {
      "id": "watermelonVeggie",
      "label": "watermelonVeggie",
      "scriptText": `# BLUEPRINT watermelonVeggie
# TAG isCharControllable true
# TAG isPozyxControllable false
# TAG isPTrackControllable false

# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'watermelonVeggie.png' 

useFeature Physics
featCall Physics init
featProp Physics scale setTo 0.5

useFeature Touches
featCall Touches monitor Bee b2b

addProp nectarAmount Number 100 
prop nectarAmount setMax 100
prop nectarAmount setMin 0 

addProp veggieID Number 0
prop veggieID setToRnd 100 999

useFeature AgentWidgets
featProp AgentWidgets text setTo 'Watermelon'
featCall AgentWidgets bindMeterTo nectarAmount

useFeature Population

# PROGRAM INIT
`
    },
    {
      "id": "background",
      "label": "background",
      "scriptText": `# BLUEPRINT background
# TAG isCharControllable true
# TAG isPozyxControllable true
# TAG isPTrackControllable false
# PROGRAM DEFINE
useFeature Costume
featCall Costume setCostume 'background (filter).png' 0
featCall Costume setScale 1
// useFeature Movement
# PROGRAM EVENT
// onEvent Tick [[ ]]
# PROGRAM UPDATE
// when xxx touches yyy [[ ]]`
    }
  ],
  "instances": [
    {
      "id": "0",
      "label": "background0",
      "bpid": "background",
      "initScript": `prop x setTo -1.42
prop y setTo 1.95
prop scale setTo 0.8`
    },
    {
      "id": "1",
      "label": "blueFlower1",
      "bpid": "blueFlower",
      "initScript": `prop x setTo -265.80
prop y setTo -111.06`
    },
    {
      "id": "2",
      "label": "yellowFlower2",
      "bpid": "yellowFlower",
      "initScript": `prop x setTo -330.85
prop y setTo 10.72`
    },
    {
      "id": "3",
      "label": "blueFlower3",
      "bpid": "blueFlower",
      "initScript": `prop x setTo -244.14
prop y setTo 133.68`
    },
    {
      "id": "4",
      "label": "redFlower4",
      "bpid": "redFlower",
      "initScript": `prop x setTo -190.11
prop y setTo 7.07`
    },
    {
      "id": "6",
      "label": "Hive6",
      "bpid": "Hive",
      "initScript": `prop x setTo 301.69
prop y setTo -212.93`
    },
    {
      "id": "7",
      "label": "pumpVeggie7",
      "bpid": "pumpVeggie",
      "initScript": `prop x setTo 76.58
prop y setTo 301.32`
    },
    {
      "id": "8",
      "label": "watermelonVeggie8",
      "bpid": "watermelonVeggie",
      "initScript": `prop x setTo 170.77
prop y setTo 104.67`
    },
    {
      "id": "9",
      "label": "squashVeggie9",
      "bpid": "squashVeggie",
      "initScript": `prop x setTo -35.24
prop y setTo 123.20`
    },
    {
      "id": "10",
      "label": "pumpVeggie10",
      "bpid": "pumpVeggie",
      "initScript": `prop x setTo 324.65
prop y setTo 294.78`
    },
    {
      "id": "11",
      "label": "Bee11",
      "bpid": "Bee",
      "initScript": `prop x setTo 31.99
prop y setTo -99.49`
    }
  ]
}